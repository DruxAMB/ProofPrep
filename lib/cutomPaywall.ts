import { getPaywallHtml, toJsonSafe, processPriceToAtomicAmount } from "x402/shared"
import type { PaymentRequirements } from "x402/types"

/**
 * Generates the custom paywall by injecting style overrides to the buttons.
 *
 * Note: We use environment variables for price and network configuration.
 */
export const customPaywallHtml: string = (() => {
  const price = process.env.PRICE || "$0.8" // Usar la variable de entorno PRICE con fallback
  const network = (process.env.NETWORK || "base") as PaymentRequirements["network"]
  const payTo = process.env.RESOURCE_WALLET_ADDRESS || "0xaf59B12ea11914A0373ffbb13FF8b03F8537C599"
  const testnet = network === "base-sepolia"

  const atomic = processPriceToAtomicAmount(price, network)
  if ("error" in atomic) {
    throw new Error(atomic.error)
  }

  const { maxAmountRequired, asset } = atomic

  const paymentRequirements: PaymentRequirements[] = [
    {
      scheme: "exact",
      network,
      maxAmountRequired,
      resource: "", // Will be updated in the browser with window.location.href
      description: "Start your interview",
      mimeType: "application/json",
      payTo,
      maxTimeoutSeconds: 300,
      asset: asset?.address ?? "",
      outputSchema: undefined,
      extra: asset?.eip712,
    },
  ]

  // Parse the price for display (remove the $ and convert to number)
  const priceValue = Number.parseFloat(price.replace("$", ""))

  // Base HTML generated by the library
  let html = getPaywallHtml({
    amount: priceValue,
    paymentRequirements: toJsonSafe(paymentRequirements) as PaymentRequirements[],
    currentUrl: "", // Will be set in the client
    testnet,
  })

  // Inject our own button styles and center everything
  const styleOverride = `
  <style>
    /* Center everything in the page */
    body {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-color: oklch(0.145 0 0);
      margin: 0;
      padding: 0;
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
    }
    
    /* Container styling */
    .container {
      max-width: 400px;
      width: 100%;
      padding: 2rem;
      text-align: center;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    /* Button styling */
    .button-blue {
      background-color: #000000;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 0.75rem 1rem;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
      width: 100%;
      margin-bottom: 0.75rem;
    }
    
    .button-blue:hover {
      background-color: #333333;
    }
    
    .button-green {
      background-color: #000000;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 0.75rem 1rem;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
      width: 100%;
    }
    
    .button-green:hover {
      background-color: #333333;
    }
    
    /* Add some spacing between elements */
    h1 {
      margin-top: 0;
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }
    
    p {
      margin-bottom: 1.5rem;
      color: #6b7280;
    }
    
    /* Footer links */
    .footer {
      display: flex;
      gap: 1.5rem;
      margin-top: 1.5rem;
      font-size: 0.875rem;
    }
    
    .footer a {
      color: #6b7280;
      text-decoration: none;
    }
    
    .footer a:hover {
      color: #1f2937;
    }
    
    /* Network notice styling */
    .network-notice {
      background-color: #f9fafb;
      border-radius: 4px;
      padding: 0.75rem;
      margin-top: 1rem;
      font-size: 0.75rem;
      color: #4b5563;
      text-align: left;
    }
    
    .network-notice strong {
      font-weight: 600;
      color: #111827;
    }
  </style>
  `

  // Add footer HTML with links
  const footerHtml = `
  <div class="footer">
    <a href="https://www.x.com/proofprepai" target="_blank" rel="noopener noreferrer">ProofPrep</a>
  </div>
  `

  html = html.replace("</head>", `${styleOverride}</head>`)

  // Replace the original content text with new wording that includes the dynamic price
  html = html.replace(
    /Access to protected content\. To access this content, please pay [^<]*/g,
    `Start your interview! Just a tiny payment of ${price} Base Sepolia USDC gives you instant access.`,
  )

  // Add the network notice after the "Need Base Sepolia USDC? Get some here." text
  html = html.replace(
    /Need Base Sepolia USDC\? <a [^>]*>Get some here<\/a>\./g,
    'Need Base Sepolia USDC? <a href="https://www.coinbase.com/faucets/base-sepolia-faucet" target="_blank" rel="noopener noreferrer">Get some here</a>. <div class="network-notice"><strong>Important:</strong> Make sure you\'re connected to the <strong>Base Sepolia</strong> network in your wallet.</div>',
  )

  // Add footer after the container
  html = html.replace("</body>", `${footerHtml}</body>`)

  return html
})()
